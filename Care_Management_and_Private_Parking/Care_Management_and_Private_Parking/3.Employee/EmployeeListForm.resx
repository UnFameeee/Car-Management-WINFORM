<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gunaCircleButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>