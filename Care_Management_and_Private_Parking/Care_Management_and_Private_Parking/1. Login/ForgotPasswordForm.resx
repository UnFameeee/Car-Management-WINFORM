<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        tAgI+B/nDhdPBWDXJAAAAABJRU5ErkJggg==
</value>
  </data>
</root>