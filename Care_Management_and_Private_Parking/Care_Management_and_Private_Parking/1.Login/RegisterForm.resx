<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>