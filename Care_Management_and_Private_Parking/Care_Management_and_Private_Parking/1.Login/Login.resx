<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>