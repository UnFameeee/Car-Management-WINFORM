<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>