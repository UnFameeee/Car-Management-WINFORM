<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Jf1Si/z3Z7IAAAAASUVORK5CYII=
</value>
  </data>
</root>